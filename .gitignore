# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

.vscode/

# generated by cargo swift 
**/generated/*
.swiftpm
frost-uniffi-sdk/FrostSwiftFFI/*
.build

# ignore rust framework binaries both framework and zip
RustFramework.xcframework.zip
RustFramework.xcframework

# ignore Package file at FrostSwiftFFI.
# we want to use the one at project root
FrostSwiftFFI/Package.swift

### Xcodebuild gitignore

Examples/FrostCompanion/build/


# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
*.xcuserdatad
xcuserdata/
## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

*/project.xcworkspace/xcuserdata/
